# remap prefix to Control + q
set -g prefix C-q
unbind C-b
bind C-q send-prefix

set-window-option -g mode-keys vi
##bind h select-pane -L
##bind j select-pane -D
##bind k select-pane -U
##bind l select-pane -R

unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-selection

# <ctrl-q>L alternate clients

# re-number windows when window is closed.
set -g renumber-windows on

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# quick pane cycling
unbind ^q
bind ^q select-pane -t :.+

# set-option -g default-shell /bin/zsh

# set -g mouse-resize-pane off

# set -g mouse-resize-pane off

# set -g mouse-select-pane off

# # set -g mouse-select-window on

# set -g mode-mouse off

# This makes splitting of windows copy the path of the window you split from.
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

## Smart pane switching with awareness of vim splits
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?2?)(diff)?$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

set-window-option -g allow-rename off

set-option -g status on
# set-option -g status-utf8 on
set-option -g status-justify "centre"
set-option -g status-left-length 80
set-option -g status-right-length 90
# set-window-option -g monitor-content 'failures='
# set-option -g visual-content on

set-option -g status-interval 15

set -g window-status-current-format "#[fg=colour234,bg=colour31]#[fg=colour117,bg=colour31] #I  #[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold]"

# set -g status-right 'Batt: #{battery_icon} #{battery_percentage} #{battery_remain} | %a %h-%d %H:%M '

# set -g @colors-solarized 'dark'
# highlight current window
# set-window-option -g window-status-current-fg black
# set-window-option -g window-status-current-bg green
#set inactive/active window styles
# set -g window-style 'fg=colour247,bg=colour236'
# set -g window-active-style 'fg=colour250,bg=black'
# # set color of active pane
# set -g pane-border-fg colour235
# set -g pane-border-bg black
# set -g pane-active-border-fg green
# set -g pane-active-border-bg black

# set-option -sa terminal-overrides ',xterm-256color:Tc'
set-option -sa terminal-overrides ',alacritty:RGB'

# set -g default-terminal "screen-256color"
# set -g default-terminal "tmux-256color"
set -g default-terminal "xterm-256color"
# set -g default-terminal "tmux-256color"
# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'


# set -g @resurrect-capture-pane-contents 'on'
# set -g @resurrect-process 'xcape'

# # restore vim sessions
# set -g @resurrect-strategy-vim 'session'
# # for neovim
# set -g @resurrect-strategy-nvim 'session'

# continuous saving/auto start/auto restore
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @continuum-restore 'on'

# open highlighted file/url
set -g @plugin 'tmux-plugins/tmux-open'

set -g @plugin 'christoomey/vim-tmux-navigator'

# regex searching
set -g @plugin 'tmux-plugins/tmux-copycat'

# regex searching
set -g @plugin 'tmux-plugins/tmux-yank'

# set -g @plugin 'tmux-plugins/tmux-battery'

set -g @plugin 'seebi/tmux-colors-solarized'

set -g @plugin 'wfxr/tmux-fzf-url'

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'

# vim: ft=tmux
